name: Main CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
  VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
  VITE_SUPABASE_SECRET_KEY: ${{ secrets.VITE_SUPABASE_SECRET_KEY }}
  SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  # Job 1: Run tests and build
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: |
        if npm run lint --silent 2>/dev/null; then
          echo "‚úÖ Linting passed"
        else
          echo "‚ö†Ô∏è No linting configured, skipping..."
        fi
      
    - name: Run type checking
      run: |
        if npm run type-check --silent 2>/dev/null; then
          echo "‚úÖ Type checking passed"
        else
          echo "‚ö†Ô∏è No type checking configured, skipping..."
        fi
      
    - name: Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_SUPABASE_SECRET_KEY: ${{ secrets.VITE_SUPABASE_SECRET_KEY }}
        SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        
    - name: Test build locally
      run: |
        echo "üß™ Testing build locally..."
        npm run start &
        SERVER_PID=$!
        sleep 20
        if curl -f http://localhost:3000; then
          echo "‚úÖ Build test successful!"
          kill $SERVER_PID
        else
          echo "‚ö†Ô∏è Build test failed, but continuing..."
          kill $SERVER_PID || true
        fi

  # Job 2: Deploy to Vercel (only runs on main branch and after successful build)
  deploy-vercel:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      
    - name: Notify deployment success
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üìã Commit: ${{ github.sha }}"
        echo "üë§ Author: ${{ github.actor }}"
        echo "üìù Check your Vercel dashboard for deployment status"
